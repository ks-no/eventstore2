syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

package  eventstore;

message EventWrapper {
    string correlation_id = 1;
    string proto_serialization_type = 2;
    string aggregate_root_id = 3;
    int64 journalid = 4;
    string aggregate_type = 5;
    int64 version = 6;
    int64 occurred_on = 7;
    google.protobuf.Any event = 8;
    string created_by_user = 9;
}

message EventWrapperBatch {
    string aggregate_type = 1;
    string aggregate_root_id = 2;
    bool read_all_events = 3;
    repeated EventWrapper events = 4;
}

message StreamPosition {
    string aggregateId = 1;
    int64 eventNumber = 2;
}

message EventProcessed {
    StreamPosition position = 1;
}

message Subscription {
    string category = 1;
    bool shouldNotifyProjectionManager = 2;
}

message AcknowledgePreviousEventsProcessed {
    string category = 1;
    StreamPosition awaitPosition = 2;
}

message PreviousEventsProcessed {

}

message RetreiveAggregateEvents {
    string aggregateRootId = 1;
    int64 fromJournalId = 2;
    string aggregateType = 3;
}

message RetreiveAggregateEventsAsync {
    string aggregateRootId = 1;
    int64 fromJournalId = 2;
    string aggregateType = 3;
}

message RetreiveCorrelationIdEventsAsync {
    string correlationId = 1;
    int64 fromJournalId = 2;
    string aggregateType = 3;
}

message SagaCompositeId{
    string clazz = 1;
    string id = 2;
}

message ScheduleAwake{
    SagaCompositeId sagaid = 1;
    google.protobuf.Timestamp awake = 2;
}

message SendAwake{
    SagaCompositeId sagaid = 1;
}

message ClearAwake{
    SagaCompositeId sagaid = 1;
}

message GetSubscribers {
}

message Subscribers {
    repeated string liveSubscriptions = 1;
    repeated string inSubscribePhase = 2;
}
